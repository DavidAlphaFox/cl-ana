logres:

* Each target and logged file should come with a timestamp so that
  verions of targets and files can be compared.  This would be useful
  for e.g. sending files to another computer and only updating the
  files which have differing timestamps as well as only saving targets
  which have changed when saving a project.

* Work files should be tracked and have optional automatic path
  management.

* Logging functionality may need to be partially supported by graph
  transformations so that targets can be saved to disk and cleared
  from memory to avoid memory bottlenecks on low-memory systems.  It's
  already taking ~ 1.5 GB for my PhD analysis just to store all the
  histograms etc. in memory.

* Single function/macro for defining a makeres+logres project along
  with common settings.

makeres:

* Logging functionality may best be provided in the compiled function
  of compres.  Each target would have as its path its res id.  Each
  target would get its own directory, and inside a target's directory
  would be a timestamp file as well as the saved information from the
  target.  Each kind of target could have its own methods for storage,
  be it a single binary file or multiple files along with an index
  file.  Deleting a result could then automatically delete the stored
  result as well if desired.

* Some way to control when and how transformations are loaded into the
  pipeline that doesn't require the user to know the exact ordering
  required.  As it stands, you have to know that e.g. macro
  transformations are required for table transformations, and that the
  transformed macros should be expanded prior to table
  transformations.
